<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2017-01-16T04:23:49+00:00</updated><id>//</id><title type="html">mje.nz</title><subtitle></subtitle><author><name>Matthew Edwards</name></author><entry><title type="html">Using Jekyll on Github Pages with gem themes, SSL and a custom URL</title><link href="/2017-01-16-using-jekyll-on-github-pages/" rel="alternate" type="text/html" title="Using Jekyll on Github Pages with gem themes, SSL and a custom URL" /><published>2017-01-16T00:00:00+00:00</published><updated>2017-01-16T00:00:00+00:00</updated><id>/using-jekyll-on-github-pages</id><content type="html" xml:base="/2017-01-16-using-jekyll-on-github-pages/">&lt;aside class=&quot;sidebar__right&quot;&gt;
&lt;nav class=&quot;toc&quot;&gt;
    &lt;header&gt;&lt;h4 class=&quot;nav__title&quot;&gt;&lt;i class=&quot;fa fa-file-text&quot;&gt;&lt;/i&gt; On This Page&lt;/h4&gt;&lt;/header&gt;
&lt;ul class=&quot;toc__menu&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot; id=&quot;markdown-toc-introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creating-a-new-jekyll-blog&quot; id=&quot;markdown-toc-creating-a-new-jekyll-blog&quot;&gt;Creating a new Jekyll blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#hosting-on-github-pages&quot; id=&quot;markdown-toc-hosting-on-github-pages&quot;&gt;Hosting on Github Pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#building-with-grunt&quot; id=&quot;markdown-toc-building-with-grunt&quot;&gt;Building with Grunt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#automation-with-travis-ci&quot; id=&quot;markdown-toc-automation-with-travis-ci&quot;&gt;Automation with Travis CI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ssl-termination-with-cloudflare&quot; id=&quot;markdown-toc-ssl-termination-with-cloudflare&quot;&gt;SSL Termination with CloudFlare&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#https-redirection&quot; id=&quot;markdown-toc-https-redirection&quot;&gt;HTTPS redirection&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#caching-images-etc&quot; id=&quot;markdown-toc-caching-images-etc&quot;&gt;Caching images etc&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#caching-html-files&quot; id=&quot;markdown-toc-caching-html-files&quot;&gt;Caching HTML files&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#wrapping-up&quot; id=&quot;markdown-toc-wrapping-up&quot;&gt;Wrapping up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/nav&gt;
&lt;/aside&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This post documents how I set up this blog.
My goal was to end up with a git repository full of Markdown files that magically turns into a modern website when I push to Github, using only free software and services.&lt;/p&gt;

&lt;p&gt;The main moving part is the &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; static site generator, which takes a Markdown file per page along with various bits of configuration and theming and compiles it into a static website ready to be hosted somewhere.
I prefer to keep the content and design separate, so I’m using the &lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/&quot;&gt;Minimal Mistakes&lt;/a&gt; theme as a gem&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.
That way, my repository’s history (mostly) only shows changes to the content and it is relatively easy to change the design.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pages.github.com&quot;&gt;Github Pages&lt;/a&gt; is a Github feature that lets you serve a Jekyll site (or bare static site) from a Github repository to &lt;code class=&quot;highlighter-rouge&quot;&gt;yourusername.github.io&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;yourusername.github.io/projectname&lt;/code&gt;.
It’s designed to be used to document open source projects, and even provides a set of pre-made project site themes&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.
It does support using your own domain but only offers SSL on &lt;code class=&quot;highlighter-rouge&quot;&gt;*.github.io&lt;/code&gt;, so for this site I’m using the &lt;a href=&quot;https://www.cloudflare.com&quot;&gt;CloudFlare&lt;/a&gt; CDN for SSL termination.&lt;/p&gt;

&lt;p&gt;Unfortunately Github Pages only supports Jekyll themes and plugins from &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;a whitelist&lt;/a&gt;, so if you want to do anything more complicated you have to manage the build yourself.
I decided to use the &lt;a href=&quot;http://gruntjs.com&quot;&gt;Grunt&lt;/a&gt; task runner to build and deploy the site.
It’s probably a bit old-fashioned these days, but I’m familiar with it and it let me easily perform a few optimisations.
Finally, I’m using &lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis CI&lt;/a&gt; to run my Grunt tasks whenever I push.&lt;/p&gt;

&lt;p&gt;The rest of this post goes over each step in more detail.
If you want a template, skip to the end.&lt;/p&gt;

&lt;h2 id=&quot;creating-a-new-jekyll-blog&quot;&gt;Creating a new Jekyll blog&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;This section is based on the Minimal Mistakes &lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/docs/quick-start-guide/&quot;&gt;quick-start guide&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;First, create a Gemfile with the following content:&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://rubygems.org&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~&amp;gt;3.3.0&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;minimal-mistakes-jekyll&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~&amp;gt;4.1.1&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; to install Jekyll, Minimal Mistakes and their dependencies.
There are a few bits of the theme that you might want to customise, so you’ll need to copy &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;_data/*&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; from the &lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes.git&quot;&gt;repository&lt;/a&gt; into your site.
Add &lt;code class=&quot;highlighter-rouge&quot;&gt;theme: &quot;minimal-mistakes-jekyll&quot;&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; and tweak the rest of the settings to your liking.
To change the links at the top of the page, edit &lt;code class=&quot;highlighter-rouge&quot;&gt;_data/navigation.yml&lt;/code&gt;.
To create posts, add files named &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.md&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder.
Each post must begin with a &lt;a href=&quot;https://jekyllrb.com/docs/frontmatter/&quot;&gt;YAML front matter block&lt;/a&gt;, like:&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Using Jekyll on Github Pages with gem themes, SSL and a custom URL&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The filenames are used to generate the permalink for each post&lt;sup id=&quot;fnref:6&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Now if you run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt;, Jekyll will build your site and serve it on &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000&lt;/code&gt;.
You should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2016-11-07-screenshot.png&quot; alt=&quot;A screenshot of a new blog&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;hosting-on-github-pages&quot;&gt;Hosting on Github Pages&lt;/h2&gt;
&lt;p&gt;Github Pages lets you host a static site from a Github repository.
There are two types of Github Pages sites: project pages and user pages.
Project pages can build from the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch, the &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch or a &lt;code class=&quot;highlighter-rouge&quot;&gt;docs/&lt;/code&gt; folder in the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch, and always publish to &lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io/projectname&lt;/code&gt;.
User pages always build from the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch of the &lt;code class=&quot;highlighter-rouge&quot;&gt;username/username.github.io&lt;/code&gt; repo and publish to &lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt;.
You can choose to serve either type of page from a custom domain.
Note that if you use a custom domain for your user page, your project pages will serve from &lt;code class=&quot;highlighter-rouge&quot;&gt;yourdomain.com/projectname&lt;/code&gt; instead.
That would be fine for a user page domain like &lt;code class=&quot;highlighter-rouge&quot;&gt;projects.mje.nz&lt;/code&gt;, but might not be ideal for &lt;code class=&quot;highlighter-rouge&quot;&gt;mje.nz&lt;/code&gt; and certainly wouldn’t make much sense for &lt;code class=&quot;highlighter-rouge&quot;&gt;blog.mje.nz&lt;/code&gt;.
Since I want this site to be at &lt;code class=&quot;highlighter-rouge&quot;&gt;blog.mje.nz&lt;/code&gt; but don’t want any project pages to turn up there too, I’m using a &lt;a href=&quot;https://github.com/mje-nz/blog.mje.nz&quot;&gt;project page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There’s not really a lot to say about actually hosting a site on Github Pages.
For a simple Jekyll site or a completely static site, just keep your source in the publishing branch and push to publish.
For a manually built Jekyll site you can &lt;a href=&quot;https://help.github.com/articles/creating-project-pages-using-the-command-line/&quot;&gt;juggle things a bit&lt;/a&gt;, or use one of the many easier options as in the next section.&lt;/p&gt;

&lt;h2 id=&quot;building-with-grunt&quot;&gt;Building with Grunt&lt;/h2&gt;
&lt;p&gt;Github Pages supports building Jekyll sites that only use themes and plugins from &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;the whitelist&lt;/a&gt;.
However, I’d rather have the site layout separated out into a gem theme and don’t especially fancy any of theirs, so I’ll be building the site manually and just pushing the results.
The approach I’m using is based on the &lt;a href=&quot;https://github.com/robwierzbowski/generator-jekyllrb&quot;&gt;Yeoman Jekyll generator&lt;/a&gt;, which unfortunately seems to be abandoned&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;.
It’s based around the &lt;a href=&quot;http://gruntjs.com&quot;&gt;Grunt&lt;/a&gt; task runner, and changes the project structure to be a bit more like a standard application:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
├── Gemfile
├── Gruntfile.js
├── Readme.md
├── _config.yml
├── package.json
├── app/
│   └── (Jekyll source)
└── dist/
    └── (Jekyll output)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here’s a simplified version of my Gruntfile.
This one just has a development server with BrowserSync (to update pages in your browser as they change), a build step with cache busting (to enable long cache TTLs), and a deploy step which commits and pushes the built site (maintaining history).&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;'use strict'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Show elapsed time after tasks run&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'time-grunt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Load all Grunt tasks (jit-grunt replaces load-grunt-tasks)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'jit-grunt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildcontrol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'grunt-build-control'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Paths&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;dirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'app'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'dist'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'&amp;lt;%= dirs.dist %&amp;gt;/*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'.jekyll'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'_config.yml,_config.build.yml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;%= dirs.app %&amp;gt;'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;%= dirs.dist %&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'_config.yml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.jekyll'&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;browserSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;bsFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.jekyll/**/*'&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Files to sync&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.jekyll'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Folder to serve from&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;watchTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Allow other watch tasks to run after this task&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;%= dirs.dist %&amp;gt;'&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
          &lt;span class=&quot;s1&quot;&gt;'&amp;lt;%= dirs.app %&amp;gt;/**/*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;s1&quot;&gt;'_config.yml'&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'jekyll:server'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;filerev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'&amp;lt;%= dirs.dist %&amp;gt;/assets/**/*'&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;usemin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;assetsDirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
          &lt;span class=&quot;s1&quot;&gt;'&amp;lt;%= dirs.dist %&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Need this for absolute URLs&lt;/span&gt;
          &lt;span class=&quot;s1&quot;&gt;'&amp;lt;%= dirs.dist %&amp;gt;/assets/css'&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Need this for relative URLs&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;%= dirs.dist %&amp;gt;/**/*.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;%= dirs.dist %&amp;gt;/assets/css/**/*.css'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;buildcontrol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;remote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'git@github.com:mje-nz/blog.mje.nz.git'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'gh-pages'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;connectCommits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'serve'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'dist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'build'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'browserSync:dist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'clean:server'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Clean .jekyll&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'jekyll:server'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Build into .jekyll once&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'browserSync:server'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Start browserSync server&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'watch'&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Trigger jekyll:server on file changes&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'build'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'clean'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Clean .jekyll and dist&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'jekyll:dist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Build into dist&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'filerev'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Rename assets to include a hash&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'usemin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Update references to assets to use new names&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'deploy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'build'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'buildcontrol'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Push to Github&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For a full template see &lt;a href=&quot;https://github.com/mje-nz/jekyll-blog-template&quot;&gt;mje-nz/jekyll-blog-template&lt;/a&gt;.
For this site I perform a few optimisations at build time, see &lt;a href=&quot;https://github.com/mje-nz/blog.mje.nz&quot;&gt;mje-nz/blog.mje.nz)&lt;/a&gt; for more detail.&lt;/p&gt;

&lt;h2 id=&quot;automation-with-travis-ci&quot;&gt;Automation with Travis CI&lt;/h2&gt;
&lt;p&gt;http://ellismichael.com/technical/2015/06/12/using-travis-ci-with-github-pages/&lt;/p&gt;

&lt;p&gt;TODO Motivation&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis CI&lt;/a&gt; is a popular hosted Continuous Integration service for Github.
It’s free for public repos (as long as you don’t mind everyone being able to see your build logs), and available as a paid service for private repos (Travis CI Pro) which you can also get through the Github Education Pack if you’re a student.&lt;/p&gt;

&lt;p&gt;If your blog is in a private repo then the setup is relatively straightforward.
By default, Travis CI Pro will &lt;a href=&quot;https://blog.travis-ci.com/2012-07-26-travis-pro-update-deploy-keys&quot;&gt;quietly add a deploy key&lt;/a&gt; to any private repo you activate, which means git pushes will “just work”.
If your blog is in a public repo this feature is unavailable, even if you have a Pro subscription.
However, the same effect can be achieved in a slightly less convenient way using the &lt;a href=&quot;https://docs.travis-ci.com/user/encrypting-files/&quot;&gt;file encryption&lt;/a&gt; feature, as suggested in &lt;a href=&quot;https://docs.travis-ci.com/user/deployment/custom/#Git&quot;&gt;their documentation&lt;/a&gt;.
First, create a new passwordless SSH key:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key: .travis-deploy-key
Enter passphrase (empty for no passphrase):
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add the key to your repo as a deploy key.
Then, encrypt the key with the &lt;code class=&quot;highlighter-rouge&quot;&gt;travis&lt;/code&gt; CLI tool:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install travis
$ travis encrypt-file .travis-deploy-key
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This generates an encrypted file (&lt;code class=&quot;highlighter-rouge&quot;&gt;.travis-deploy-key.enc&lt;/code&gt;), sets up environment variables in your Travis CI account which you can use to decrypt it, and prints a command to include in your &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; file which uses the environment variables to decrypt the file.
That way, only someone with access to your Travis CI account can decrypt the file (as long as you don’t print the environment variables in the log and share it) so it’s safe to commit.
An alternative is to use a &lt;a href=&quot;https://help.github.com/articles/creating-an-access-token-for-command-line-use/&quot;&gt;Github access token&lt;/a&gt; instead of a deploy key, but the least-powerful scope that would work is “push to all of my public repos” which seems a bit over-the-top.&lt;/p&gt;

&lt;p&gt;Aside from that, the Travis CI setup is reasonably simple.
Recent versions of Ruby and Node need to be installed, so I’m using the Ruby image and installing Node 6 manually (the other way round gave me some issues).
Here’s the full &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;language: ruby
rvm:
  - 2.2

cache:
  bundler: true  # Doesn't seem to work
  directories:
  - node_modules

before_install:
  - nvm install 6
install:
  - bundle install
  - npm install

before_script:
  - git config --global user.name &quot;Travis-CI&quot;
  - git config --global user.email &quot;noreply@travis-ci.org&quot;
  # Decrypt and add deploy key (not necessary for private repo)
  - openssl aes-256-cbc -K $encrypted_c9381cfb26bc_key -iv $encrypted_c9381cfb26bc_iv -in .travis-deploy-key.enc -out .travis-deploy-key -d
  - chmod 600 .travis-deploy-key
  - eval &quot;$(ssh-agent -s)&quot;
  - ssh-add .travis-deploy-key

script:
  - grunt deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Just activate your repo on Travis CI, then commit those two files and watch your site magically build and deploy.
Note that if you’re using a user page rather than a project page and therefore publishing to the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch, Travis CI will trigger a build when it successfully pushes your build!
You can disable this behaviour using the “Build only if .travis.yml is present” setting.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch is ignored by default, so project pages do not have this issue.&lt;/p&gt;

&lt;p&gt;I have the build set to cache the Ruby and Node package install steps, but I’m not convinced the Bundler cache is doing anything.
It takes about 70s to run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; whether or not there’s a cache, which is the majority of my build time.&lt;/p&gt;

&lt;h2 id=&quot;ssl-termination-with-cloudflare&quot;&gt;SSL Termination with CloudFlare&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;This section is based on &lt;a href=&quot;https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/&quot;&gt;a CloudFlare blog post&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Github Pages only supports SSL for pages served without a custom domain.
CloudFlare’s Universal SSL can basically do the job, but there are a few caveats:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The connection from CloudFlare to the origin &lt;em&gt;will&lt;/em&gt; use SSL but the origin certificate &lt;em&gt;will not&lt;/em&gt; be verified, so it’s still possible to MITM the traffic&lt;/li&gt;
  &lt;li&gt;The certificate CloudFlare issues for your site will also have Subject Alternate Names for other sites you don’t control, &lt;a href=&quot;https://www.troyhunt.com/should-you-care-about-the-quality-of-your-neighbours-on-a-san-certificate/&quot;&gt;which might be embarrassing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The certificate CloudFlare issues for your site will not work on a certain older browsers&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If any of that is a deal-breaker you’ll have to look elsewhere (e.g. hosting on &lt;a href=&quot;https://octoperf.com/blog/2015/06/01/host-jekyll-on-s3-cloudfront/&quot;&gt;Amazon S3 behind Cloudfront&lt;/a&gt;), but I think it’s fine for most applications.
The upside of using CloudFlare is that you also get their caching, DDOS protection, HTTP/2 support etc for free.&lt;/p&gt;

&lt;p&gt;To set it up, register with CloudFlare and &lt;a href=&quot;https://support.cloudflare.com/hc/en-us/articles/201720164-Step-2-Create-a-CloudFlare-account-and-add-a-website&quot;&gt;add your domain to your CloudFlare account&lt;/a&gt;.
Set the custom domain on your Github Pages page to the domain (or subdomain) you want to serve it from, and add a CNAME record on CloudFlare pointing from that domain to &lt;code class=&quot;highlighter-rouge&quot;&gt;yourusername.github.io&lt;/code&gt; (whether you’re using a project page or a user page), and you’re done!&lt;/p&gt;

&lt;h3 id=&quot;https-redirection&quot;&gt;HTTPS redirection&lt;/h3&gt;
&lt;p&gt;You can redirect to HTTPS automatically using a &lt;a href=&quot;https://support.cloudflare.com/hc/en-us/articles/200172336-How-do-I-create-a-Page-Rule-&quot;&gt;CloudFlare Page Rule&lt;/a&gt;.
You’ll have to wait a while for CloudFlare to generate an SSL certificate first.&lt;/p&gt;

&lt;h3 id=&quot;caching-images-etc&quot;&gt;Caching images etc&lt;/h3&gt;
&lt;p&gt;By default, CloudFlare will cache &lt;a href=&quot;https://support.cloudflare.com/hc/en-us/articles/200172516-Which-file-extensions-does-CloudFlare-cache-for-static-content&quot;&gt;most static filetypes&lt;/a&gt; for 4 hours regardless of the cache headers from the origin server (which for Github Pages is a 10 minute TTL).
Since my build process renames assets when they change, it’s safe to set a long browser cache expiration time (I use one month).
Note that this is how long your visitors’ browsers will wait before requesting a file again from CloudFlare, not how long CloudFlare’s edge servers will wait before requesting a file again from Github Pages.
The default edge cache expiration setting seems to be to respect the cache headers from the origin server.
You can only change this setting with a Page Rule.&lt;/p&gt;

&lt;h3 id=&quot;caching-html-files&quot;&gt;Caching HTML files&lt;/h3&gt;
&lt;p&gt;CloudFlare does not cache HTML files by default.
You can set it to with a Page Rule, but if you’re not careful you could end up unable to update your front page and posts!
On this site, I have a page rule that gives HTML files a browser cache TTL of 30 minutes (the shortest setting)
and an edge cache TTL of one day, and I purge the CloudFlare cache using &lt;a href=&quot;https://github.com/ghinda/grunt-cloudflare-purge&quot;&gt;grunt-cloudflare-purge&lt;/a&gt; whenever the content updates.
That means my whole website can be served from CloudFlare’s cache, but visitors might not see updates for up to half an hour.
There’s a race condition if I update one post to point at a new part of another and a visitor has both in their browser cache, but I don’t think that’s too big a deal.&lt;/p&gt;

&lt;h2 id=&quot;wrapping-up&quot;&gt;Wrapping up&lt;/h2&gt;
&lt;p&gt;To see all this put together, check out &lt;a href=&quot;https://github.com/mje-nz/jekyll-blog-template&quot;&gt;mje-nz/jekyll-blog-template&lt;/a&gt;.
To see how this site is set up (which is a little more involved), see &lt;a href=&quot;https://github.com/mje-nz/blog.mje.nz&quot;&gt;mje-nz/blog.mje.nz&lt;/a&gt;.&lt;/p&gt;

&lt;!-- Other resources:
https://developer.ubuntu.com/en/blog/2016/02/17/how-host-your-static-site-https-github-pages-and-cloudflare/
https://toddmotto.com/cache-busting-jekyll-github-pages
http://davidensinger.com/2015/01/performant-websites-with-jekyll-grunt-github-pages-and-cloudflare/
--&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;As of &lt;a href=&quot;https://jekyllrb.com/news/2016/07/26/jekyll-3-2-0-released/&quot;&gt;Jekyll 3.2&lt;/a&gt;, themes can be packaged as Ruby gems – previously themes were used by forking a repository and carefully merging when the theme changes.&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;They don’t seem to have any intention of supporting community themes but the themes they provide look reasonably nice, see &lt;a href=&quot;https://help.github.com/articles/creating-a-github-pages-site-with-the-jekyll-theme-chooser/&quot;&gt;here&lt;/a&gt; for documentation.&amp;nbsp;&lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot;&gt;
      &lt;p&gt;Although not directly, see &lt;a href=&quot;https://jekyllrb.com/docs/permalinks/&quot;&gt;here&lt;/a&gt;.&amp;nbsp;&lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;As of 2017-01-13 it hasn’t been updated in a few years, and I had to choose the HTML5 boilerplate template to get it to run to completion.&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;CloudFlare’s free SSL certificates work on most browsers, but notably only on Windows Vista or later, Mac OSX 10.6 or later, iOS 4 or later, and Android 3 or later, see &lt;a href=&quot;https://support.cloudflare.com/hc/en-us/articles/203041594-What-browsers-work-with-CloudFlare-s-SSL-certificates-&quot;&gt;here&lt;/a&gt;.&amp;nbsp;&lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Matthew Edwards</name></author><summary type="html">This post documents how I set up this blog. My goal was to end up with a git repository full of Markdown files that magically turns into a modern website when I push to Github, using only free software and services.</summary></entry><entry><title type="html">RFM69 frequency bands in New Zealand</title><link href="/2016-12-27-rfm69-frequency-bands-in-new-zealand/" rel="alternate" type="text/html" title="RFM69 frequency bands in New Zealand" /><published>2016-12-27T00:00:00+00:00</published><updated>2016-12-27T00:00:00+00:00</updated><id>/rfm69-frequency-bands-in-new-zealand</id><content type="html" xml:base="/2016-12-27-rfm69-frequency-bands-in-new-zealand/">&lt;p&gt;The RFM69 series from HopeRF look like a good alternative to the Nordic radios.
They have modules available for 315 MHz, 433 MHz, 898 MHz and 915 MHz.
Different countries have different restrictions on each of these bands however, so here is the situation in New Zealand &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&quot;315mhz&quot;&gt;315 MHz&lt;/h3&gt;
&lt;p&gt;The 315 MHz module has a range of 290-340 MHz. Transmitting anywhere in that range in NZ requires a (paid) license from RSM.&lt;/p&gt;

&lt;h3 id=&quot;433mhz&quot;&gt;433 MHz&lt;/h3&gt;
&lt;p&gt;The 433 MHz module has a range of 424-510 MHz.
Most of this range requires a license, but there are a few narrow bands that can be used freely:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;433.05-434.79 MHz is limited to 14 dBm EIRP&lt;/li&gt;
  &lt;li&gt;458.54-458.61 MHz is limited to 27 dBm EIRP&lt;/li&gt;
  &lt;li&gt;466.8-466.85 MHz is limited to 27 dBm EIRP&lt;/li&gt;
  &lt;li&gt;471-471.5 MHz is limited to 20 dBm EIRP&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;898mhz&quot;&gt;898 MHz&lt;/h3&gt;
&lt;p&gt;The 898 MHz module has a range of 862-890 MHz.
864-868 MHz is limited to 30 dBm EIRP (or 36 dBm if frequency hopping is used), the rest requires a license.&lt;/p&gt;

&lt;h3 id=&quot;915mhz&quot;&gt;915 MHz&lt;/h3&gt;
&lt;p&gt;The 915 MHz module has a range of 890-1020 MHz.
915-928 MHz is limited to 30 dBm EIRP (920-928 MHz is limited to 36 dBm with frequency hopping), the rest requires a license.
This module makes the most sense in NZ as it has by far the most spectrum available.&lt;/p&gt;

&lt;h2 id=&quot;spurious-emissions&quot;&gt;Spurious emissions&lt;/h2&gt;
&lt;p&gt;Generally in NZ the limit for spurious emissions is -26 dBm peak EIRP (59 dBμV/m at 10 m) &lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.
Additionally, the 800-915 MHz band has a limit of -49 dBm and the 928-1000 MHz band has a limit of -33 dBm.&lt;/p&gt;

&lt;p&gt;Compliance outside 800-1000 MHz can be determined from the &lt;a href=&quot;http://www.hoperf.com/upload/docs/report/RFM69CW-915S2-FCC.pdf&quot;&gt;FCC compliance test report available from HopeRF&lt;/a&gt;, if we assume that it’s accurate.
Below 800 MHz the highest value is about 30 dBμV/m at 3 m, which corresponds to about 20 dBμV/m at 10 m assuming the test was performed properly&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.
Above 1 GHz there is a single peak of 55.19 dBμV/m at 3 m at the first harmonic (around 1830 MHz) &lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;.
That corresponds to 44.73 dBμV/m at 10 m, which is 14.27 dB below the NZ limit.
However, in the FCC test the module was running at the 0dBm power setting, which suggests that at a power setting of 14.27 dBm it would reach the NZ limit at the first harmonic.
Since that frequency is used for cell tower transmissions in NZ, running an RFM69HW (the high-power variant) at full power &lt;em&gt;might&lt;/em&gt; affect cellphone reception.
It could still make sense to use an RFM69HW though, since &lt;a href=&quot;https://www.andrehessling.de/2015/02/07/figuring-out-the-power-level-settings-of-hoperfs-rfm69-hwhcw-modules/&quot;&gt;some users&lt;/a&gt; have found it to be slightly more efficient than the RFM69W.&lt;/p&gt;

&lt;p&gt;Compliance within the 8800-1000 MHz band is a bit tricky though; there don’t appear to be any test results available for the RFM69 modules that show the spectrum around the carrier frequency.
The datasheet says the adjacent channel power is -37 dBm at 25 kHz offset but doesn’t give any more detail than that, so it would be best to stay within 917-926 MHz or so to be safe.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;As specified in the &lt;a href=&quot;https://gazette.govt.nz/notice/id/2016-go6047&quot;&gt;Radiocommunications Regulations (General User Radio Licence for Short Range Devices) Notice 2016 No. 2&lt;/a&gt;.&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;See Table 2 of the &lt;a href=&quot;https://www.gazette.govt.nz/notice/id/2016-go2007&quot;&gt;Radiocommunications Regulations (Radio Standards) Notice 2016&lt;/a&gt;.&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;See &lt;a href=&quot;https://www.eeweb.com/electronics-quiz/radiated-emission-measurements-conversion&quot;&gt;here&lt;/a&gt;.&amp;nbsp;&lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;For some reason the peak is at a different frequency depending on the polarisation; that doesn’t really matter in this context though.&amp;nbsp;&lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Matthew Edwards</name></author><summary type="html">The RFM69 series from HopeRF look like a good alternative to the Nordic radios.
They have modules available for 315 MHz, 433 MHz, 898 MHz and 915 MHz.
Different countries have different restrictions on each of these bands however, so here is the situation in New Zealand 1.


  
    
      As specified in the Radiocommunications Regulations (General User Radio Licence for Short Range Devices) Notice 2016 No. 2.&amp;nbsp;&amp;#8617;</summary></entry></feed>
